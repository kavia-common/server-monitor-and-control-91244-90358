{"is_source_file": true, "format": "TypeScript", "description": "This file defines an Angular HTTP interceptor that adds an Authorization header with a token retrieved from localStorage to outgoing HTTP requests, along with error handling logic for auth-related responses. It also provides a helper function to register the interceptor within Angular's dependency injection system.", "external_files": ["@angular/common/http", "rxjs", "rxjs/operators"], "external_methods": ["provideHttpClient", "withInterceptors"], "published": ["authInterceptor", "provideAuthInterceptor"], "classes": [], "methods": [{"name": "function readToken(): string | null { readToken", "description": "Safely reads the 'auth_token' from localStorage, handling errors silently.", "scope": "", "scopeKind": ""}, {"name": "function shouldAttachAuth(req: HttpRequest<unknown>): boolean { shouldAttachAuth", "description": "Determines whether the Authorization header should be attached to a request; currently always returns true.", "scope": "", "scopeKind": ""}, {"name": "authInterceptor", "description": "Main HTTP interceptor function adding the Authorization header and handling errors."}, {"name": "provideAuthInterceptor", "description": "Helper function to provide the interceptor via Angular's provideHttpClient withInterceptors API."}], "calls": ["next(modifiedReq)", "throwError(() => error)"], "search-terms": ["Angular HTTP interceptor", "auth token from localStorage", "authorization header", "authInterceptor", "provideHttpClient", "withInterceptors", "auth_token"], "state": 2, "file_id": 27, "knowledge_revision": 68, "git_revision": "", "ctags": [{"_type": "tag", "name": "authInterceptor", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/interceptors/auth.interceptor.ts", "pattern": "/^export const authInterceptor: HttpInterceptorFn = (req: HttpRequest<unknown>, next: HttpHandlerF/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "g", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/interceptors/auth.interceptor.ts", "pattern": "/^    const g: any = (globalThis as any);$/", "language": "TypeScript", "kind": "constant", "scope": "readToken", "scopeKind": "function"}, {"_type": "tag", "name": "headers", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/interceptors/auth.interceptor.ts", "pattern": "/^        const headers: HttpHeaders = req.headers.set('Authorization', `Bearer ${token}`);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "ls", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/interceptors/auth.interceptor.ts", "pattern": "/^    const ls = g?.localStorage;$/", "language": "TypeScript", "kind": "constant", "scope": "readToken", "scopeKind": "function"}, {"_type": "tag", "name": "provideAuthInterceptor", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/interceptors/auth.interceptor.ts", "pattern": "/^export const provideAuthInterceptor = () => provideHttpClient(withInterceptors([authInterceptor]/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "readToken", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/interceptors/auth.interceptor.ts", "pattern": "/^function readToken(): string | null {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "shouldAttachAuth", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/interceptors/auth.interceptor.ts", "pattern": "/^function shouldAttachAuth(req: HttpRequest<unknown>): boolean {$/", "language": "TypeScript", "kind": "function"}], "hash": "40c987ff51475564438015e6be3b6507", "format-version": 4, "code-base-name": "service_status_frontend", "filename": "service_status_frontend/src/app/core/interceptors/auth.interceptor.ts", "revision_history": [{"68": ""}]}