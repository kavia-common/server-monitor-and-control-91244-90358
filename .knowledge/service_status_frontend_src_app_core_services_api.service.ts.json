{"is_source_file": true, "format": "TypeScript", "description": "This file defines an Angular service class 'ApiService' that manages all REST API interactions with a backend. It includes methods for service queries, user and process management, authentication, and token handling, emphasizing environment-based configuration and error handling.", "external_files": ["../../../environments/environment", "../models"], "external_methods": ["environment.apiBaseUrl", "catchError"], "published": ["ApiService"], "classes": [{"name": "ApiService", "description": "An Angular injectable service that provides methods to communicate with REST endpoints for managing services, users, processes, and authentication."}], "methods": [{"name": "getServices", "description": "Fetches a list of monitored services with optional query parameters."}, {"name": "getServiceUsers", "description": "Retrieves users associated with a specific service."}, {"name": "getServiceProcesses", "description": "Retrieves processes associated with a specific service."}, {"name": "terminateUser", "description": "Terminates a user session or account, optionally scoped to a service."}, {"name": "terminateProcess", "description": "Terminates a process by PID, optionally scoped to a service."}, {"name": "login", "description": "Performs user login, stores auth token upon success."}, {"name": "logout", "description": "Clears local authentication token."}, {"name": "me", "description": "Retrieves current user profile information from the backend."}, {"name": "createHeaders", "description": "Creates HTTP headers with optional extra fields, including authorization."}, {"name": "handleError", "description": "Handles HTTP errors in API calls, providing centralized error processing."}, {"name": "safeGetToken", "description": "Safely retrieves auth token from localStorage in a browser environment."}, {"name": "safeSetToken", "description": "Stores auth token in localStorage in a browser environment."}, {"name": "safeClearToken", "description": "Removes auth token from localStorage in a browser environment."}], "calls": ["this.http.get", "this.http.post", "this.http.get<UserInfo>", "this.http.post<TerminateResponse>", "this.http.get<UserInfo>", "this.http.post<{ token?: string; user?: UserInfo }>", "this.http.get<UserInfo>"], "search-terms": ["Angular ApiService", "HttpClient REST API", "environment configuration", "token management", "terminate user/process"], "state": 2, "file_id": 24, "knowledge_revision": 64, "git_revision": "", "revision_history": [{"49": ""}, {"56": ""}, {"57": ""}, {"58": ""}, {"59": ""}, {"64": ""}], "ctags": [{"_type": "tag", "name": "ApiService", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/api.service.ts", "pattern": "/^export class ApiService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "body", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/api.service.ts", "pattern": "/^    const body: TerminateRequest = {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "force", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/api.service.ts", "pattern": "/^      force: payload?.force,$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "g", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/api.service.ts", "pattern": "/^      const g: any = (globalThis as any);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "headers", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/api.service.ts", "pattern": "/^    let headers = new HttpHeaders({$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "http", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/api.service.ts", "pattern": "/^  private readonly http = inject(HttpClient);$/", "language": "TypeScript", "kind": "property", "scope": "ApiService", "scopeKind": "class"}, {"_type": "tag", "name": "httpParams", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/api.service.ts", "pattern": "/^    let httpParams = new HttpParams();$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "isClientError", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/api.service.ts", "pattern": "/^    const isClientError =$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "ls", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/api.service.ts", "pattern": "/^      const ls = g?.localStorage;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/api.service.ts", "pattern": "/^    let message = 'Unknown error';$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "pidStr", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/api.service.ts", "pattern": "/^    const pidStr = String(pid);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "reason", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/api.service.ts", "pattern": "/^      reason: payload?.reason,$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "requestedBy", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/api.service.ts", "pattern": "/^      requestedBy: payload?.requestedBy,$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "serviceId", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/api.service.ts", "pattern": "/^      serviceId: payload?.serviceId,$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "token", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/api.service.ts", "pattern": "/^    const token = this.safeGetToken();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/api.service.ts", "pattern": "/^    const url = `${this.apiBaseUrl}\\/auth\\/login`;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/api.service.ts", "pattern": "/^    const url = `${this.apiBaseUrl}\\/auth\\/me`;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/api.service.ts", "pattern": "/^    const url = `${this.apiBaseUrl}\\/services\\/${encodeURIComponent(serviceId)}\\/processes`;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/api.service.ts", "pattern": "/^    const url = `${this.apiBaseUrl}\\/services\\/${encodeURIComponent(serviceId)}\\/users`;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/api.service.ts", "pattern": "/^    const url = `${this.apiBaseUrl}\\/services`;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/api.service.ts", "pattern": "/^    const url = `${this.apiBaseUrl}\\/terminate\\/process\\/${encodeURIComponent(pidStr)}`;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/api.service.ts", "pattern": "/^    const url = `${this.apiBaseUrl}\\/terminate\\/user\\/${encodeURIComponent(userId)}`;$/", "language": "TypeScript", "kind": "constant"}], "hash": "f1ada6dfa07c6b7496f25db543b0c7e3", "format-version": 4, "code-base-name": "service_status_frontend", "filename": "service_status_frontend/src/app/core/services/api.service.ts", "fields": [{"name": "let headers = new HttpHeaders({", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "private readonly http = inject(HttpClient);", "scope": "ApiService", "scopeKind": "class", "description": "unavailable"}, {"name": "let httpParams = new HttpParams();", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let message = 'Unknown error';", "scope": "", "scopeKind": "", "description": "unavailable"}]}