{"is_source_file": true, "format": "TypeScript", "description": "This file contains an Angular service called RealtimeService that manages live updates via WebSocket or Server-Sent Events (SSE). It provides RxJS observables for components to subscribe to real-time data streams such as service summaries, user info, and process info. The service dynamically chooses the transport based on environment configuration and handles connection lifecycle, message parsing, and resource cleanup.", "external_files": ["../../../environments/environment", "../models"], "external_methods": [], "published": ["status$", "services$", "users$", "processes$", "messages$", "connect", "disconnect"], "classes": [{"name": "RealtimeService", "description": "Angular service managing real-time data connections via WebSocket or SSE."}], "methods": [{"name": "constructor", "description": "Initializes the RealtimeService with dependency injection."}, {"name": "connect", "description": "Establishes connection to the real-time backend, preferring WebSocket if URL starts with 'ws'."}, {"name": "disconnect", "description": "Terminates the connection and cleans up resources."}, {"name": "connectWebSocket", "description": "Sets up WebSocket connection and handlers."}, {"name": "connectEventSource", "description": "Sets up SSE (EventSource) connection and handlers."}, {"name": "realtimeUrlWithAuth", "description": "Generates the real-time URL, appending auth token if available."}, {"name": "handleIncoming", "description": "Processes incoming messages, routing data to appropriate subjects based on message type."}], "calls": ["JSON.parse", "console.warn", "console.error", "localStorage.getItem"], "search-terms": ["RxJS RealtimeService", "WebSocket connection management", "SSE EventSource", "real-time data streams", "Angular service for real-time updates"], "state": 2, "file_id": 25, "knowledge_revision": 66, "git_revision": "", "revision_history": [{"52": ""}, {"60": ""}, {"61": ""}, {"62": ""}, {"63": ""}, {"65": ""}, {"66": ""}], "ctags": [{"_type": "tag", "name": "ES", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/realtime.service.ts", "pattern": "/^      const ES: any = (globalThis as any).EventSource;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "JSON", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/realtime.service.ts", "pattern": "/^      const msg = typeof raw === 'string' ? JSON.parse(raw) : raw;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "RealtimeService", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/realtime.service.ts", "pattern": "/^export class RealtimeService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "WS", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/realtime.service.ts", "pattern": "/^      const WS: any = (globalThis as any).WebSocket;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "connectionState$", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/realtime.service.ts", "pattern": "/^  private connectionState$ = new BehaviorSubject<'disconnected' | 'connecting' | 'connected' | '/", "language": "TypeScript", "kind": "property", "scope": "RealtimeService", "scopeKind": "class"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/realtime.service.ts", "pattern": "/^      const data = msg?.data;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "hasQuery", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/realtime.service.ts", "pattern": "/^    const hasQuery = this.realtimeUrl.includes('?');$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "ls", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/realtime.service.ts", "pattern": "/^      const ls: any = (globalThis as any)?.localStorage;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "msg", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/realtime.service.ts", "pattern": "/^      const msg = typeof raw === 'string' ? JSON.parse(raw) : raw;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "token", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/realtime.service.ts", "pattern": "/^    let token: string | null = null;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "type", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/realtime.service.ts", "pattern": "/^      const type = msg?.type;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/core/services/realtime.service.ts", "pattern": "/^      const url = this.realtimeUrlWithAuth();$/", "language": "TypeScript", "kind": "constant"}], "hash": "3d52c51b25cf2e2cf82254fcdd2247bf", "format-version": 4, "code-base-name": "service_status_frontend", "filename": "service_status_frontend/src/app/core/services/realtime.service.ts", "fields": [{"name": "private connectionState$ = new BehaviorSubject<'disconnected' | 'connecting' | 'connected' | '/", "scope": "RealtimeService", "scopeKind": "class", "description": "unavailable"}, {"name": "let token: string | null = null;", "scope": "", "scopeKind": "", "description": "unavailable"}]}