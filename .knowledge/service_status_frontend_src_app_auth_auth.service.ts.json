{"is_source_file": true, "format": "TypeScript", "description": "This file defines the AuthService class in Angular, which manages authentication state, token handling, and user profile retrieval and storage. It uses RxJS observables to expose authentication status and interacts with localStorage safely in a browser context.", "external_files": ["../core/services", "../core/models"], "external_methods": ["ApiService.login", "ApiService.logout", "ApiService.me"], "published": ["AuthService"], "classes": [{"name": "AuthService", "description": "Service handling authentication state, token management, and user profile retrieval in Angular."}], "methods": [{"name": "auth$", "description": "Observable of the full authentication state, including token and user information."}, {"name": "isAuthenticated$", "description": "Observable boolean indicating whether a user is currently authenticated."}, {"name": "token", "description": "Current authentication token value, if available."}, {"name": "login", "description": "Performs login using username and password, updates token and authentication state."}, {"name": "logout", "description": "Clears authentication token and user state, notifying observers."}, {"name": "refreshProfile", "description": "Reloads user profile information if authenticated."}, {"name": "safeReadToken", "description": "Reads the token from localStorage safely, considering browser context."}, {"name": "safeWriteToken", "description": "Writes the token to localStorage safely, considering browser context."}, {"name": "safeClearToken", "description": "Clears the token from localStorage."}], "calls": ["ApiService.login", "ApiService.logout", "ApiService.me"], "search-terms": ["Angular AuthService", "Token management", "RxJS BehaviorSubject", "localStorage token", "Authentication state observable"], "state": 2, "file_id": 28, "knowledge_revision": 71, "git_revision": "", "ctags": [{"_type": "tag", "name": "AuthService", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/auth/auth.service.ts", "pattern": "/^export class AuthService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "api", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/auth/auth.service.ts", "pattern": "/^  private readonly api = inject(ApiService);$/", "language": "TypeScript", "kind": "property", "scope": "AuthService", "scopeKind": "class"}, {"_type": "tag", "name": "cur", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/auth/auth.service.ts", "pattern": "/^    const cur = this.authState$.value;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "g", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/auth/auth.service.ts", "pattern": "/^      const g: any = (globalThis as any);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "ls", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/auth/auth.service.ts", "pattern": "/^      const ls = g?.localStorage;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "token", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/auth/auth.service.ts", "pattern": "/^        const token = resp?.token || null;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "token", "path": "/home/kavia/workspace/code-generation/server-monitor-and-control-91244-90358/service_status_frontend/src/app/auth/auth.service.ts", "pattern": "/^    const token = this.safeReadToken();$/", "language": "TypeScript", "kind": "constant"}], "hash": "63227075d8f7494696dbdcde063d2d51", "format-version": 4, "code-base-name": "service_status_frontend", "filename": "service_status_frontend/src/app/auth/auth.service.ts", "fields": [{"name": "private readonly api = inject(ApiService);", "scope": "AuthService", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"71": ""}]}